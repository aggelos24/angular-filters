{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,gsBAAgsB,8DAA8D,KAAK,WAAW,umBAAumB,2DAA2D,KAAK,WAAW,69BAA69B,yCAAyC,UAAU,yBAAyB,gBAAgB,yBAAyB,aAAa,mCAAmC,4HAA4H,MAAM,cAAc,0S;;;;;;;;;;;;;;;;;;;;;;;;;ACAvoF;AACzB;AAelD;IA0BC,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAvBpC,UAAK,GAAG;YACP,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,SAAS;SACjB,CAAC;QAEF,iBAAY,GAAG;YACd,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,KAAK;SACZ,CAAC;QAEF,kBAAa,GAAG;YACD,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACvB,CAAC;IASqC,CAAC;IAEN,sCAAe,GAAf;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAO,kBAAkB;IAC5D,CAAC;IAE0C,+BAAQ,GAAR,UAAS,KAAW;QAC9D,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAO,8BAA8B;QACrE,CAAC;QACD,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAM,2BAA2B;QAClE,CAAC;IACF,CAAC;IAED,+BAAQ,GAAR;QACC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAO,sBAAsB;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,OAAO,EAAE,CAAC,CAAU,uBAAuB;IACjD,CAAC;IAED,8BAAO,GAAP;QAAA,iBAUC;QATA,IAAM,GAAG,GAAW,kBAAkB,CAAC,CAAO,2CAA2C;QAEzF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAQ,wCAAwC;YACtE,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,CAAM,2BAA2B;YACjE,KAAI,CAAC,MAAM,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAG,mDAAmD;QAChH,CAAC,EAAE,eAAK;YACP,KAAI,CAAC,sBAAsB,EAAE,CAAC,CAAO,sCAAsC;QAC5E,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,0CAAmB,GAAnB,UAAoB,SAAiB;QACtB,IAAI,SAAS,EAAE,KAAK,EAAE,mBAAmB,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAqD,sBAAsB;QAC9G,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QAE9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,EAAE,CAAC,CAAkE,sBAAsB;YACtG,MAAM,CAAC,CAAyE,2BAA2B;QACnH,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,CAAyE,2BAA2B;QACnH,CAAC;QAED,mBAAmB,GAAG,KAAK,CAAC;QAC5B,GAAG,CAAC,CAAY,UAAc,EAAd,SAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc;YAAzB,IAAI,GAAG;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC/B,GAAG,CAAC,CAAgB,UAA6B,EAA7B,SAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAA7B,cAA6B,EAA7B,IAA6B;oBAA5C,IAAI,OAAO;oBACR,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBACvC,mBAAmB,GAAG,IAAI,CAAC;oBACnC,CAAC;iBACR;YACT,CAAC;YAED,EAAE,CAAC,CAAC,mBAAmB,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;gBACI,mEAAmE;gBAC3I,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAuB,oEAAoE;gBAE5I,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;wBACvC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;wBAC1G,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;oBAC5C,CAAC;oBACD,IAAI,CAAC,CAAC;wBACE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;wBACpC,0CAA0C;oBAC7I,CAAC;gBACF,CAAC;YACF,CAAC;SACD;QAEa,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAiD,qBAAqB;QAC7G,CAAC;IAChB,CAAC;IAED,uCAAgB,GAAhB,UAAiB,KAAa;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC,CAAiD,kCAAkC;QAC1H,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,CAA2C,iBAAiB;QAEzG,IAAI,CAAC,MAAM,EAAE,CAAC,CAA0E,sBAAsB;IAC7H,CAAC;IAED,6BAAM,GAAN;QACe,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAM,0BAA0B;QAC1E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAiD,uBAAuB;QAC/G,CAAC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC,CAA0E,sBAAsB;IAC7H,CAAC;IAED,mCAAY,GAAZ,UAAa,SAAiB;QAA9B,iBAQQ;QAPO,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACE,6CAA6C;YAC7H,UAAU,CAAC;gBACH,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAM,kBAAkB;YAC/D,CAAC,EAAE,EAAE,CAAC,CAAC;QACf,CAAC;IACT,CAAC;IAER,6BAAM,GAAN;QACC,IAAI,QAAQ,GAAgB,IAAI,CAAC,SAAS,CAAC,CAAM,+BAA+B;QAEhF,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACxC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAI,uDAAuD;QAC5G,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YACrC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAK,oDAAoD;QACvG,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;YACpC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAK,qDAAqD;QACzG,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAQ,wCAAwC;QAC1E,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAI,mDAAmD;IACjH,CAAC;IAED,mCAAY,GAAZ;QACC,IAAI,CAAC,KAAK,GAAG;YACZ,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,YAAY,GAAG;YACnB,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,KAAK;SACZ,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1D,CAAC;IAED,kCAAW,GAAX;QACC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAC,CAAC,CAAC;IACvF,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAE,GAAS;QACzB,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;IACf,CAAC;IAED,gCAAS,GAAT,UAAU,IAAiB,EAAE,QAAgB;QAC5C,IAAI,WAAW,GAAgB,EAAE,CAAC;QAElC,GAAG,CAAC,CAAY,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAf,IAAI,GAAG;YACX,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC3C,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAO,+BAA+B;gBAC5D,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;oBACzB,KAAK,CAAC,CAAQ,WAAW;gBAC1B,CAAC;YACF,CAAC;SACD;QAED,MAAM,CAAC,WAAW,CAAC,CAAS,+BAA+B;IAC5D,CAAC;IAED,6CAAsB,GAAtB;QACC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAS,gBAAgB;QAC7C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,kCAAW,GAAX;QACC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAS,kBAAkB;IACnD,CAAC;IA5KiC;QAA/B,kEAAY,CAAC,gBAAgB,CAAC;;;;uDAEhC;IAE0C;QAA1C,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAAgB,KAAK;;gDAO9D;IAvCW,YAAY;QALxB,+DAAS,CAAC;YACV,QAAQ,EAAE,UAAU;;;SAGpB,CAAC;yCA2ByB,+DAAU;OA1BxB,YAAY,CAyMxB;IAAD,mBAAC;CAAA;AAzMwB;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiC;AACjB;AACI;AACW;AAET;AAe/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,2DAAY;aACZ;YACD,OAAO,EAAE;gBACR,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;aAChB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SACzB,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACpBtB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"main\\\">\\n\\t\\n\\t<h2 class=\\\"text-center\\\"> Filters </h2>\\n\\t<div class=\\\"filters-containers\\\">\\n\\t\\t<div class=\\\"fullname-filter mr-15px mt-10px\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"w-100\\\" [(ngModel)]=\\\"input.fullname\\\" (ngModelChange)=\\\"generateSuggestions('fullname')\\\" (click)=\\\"inputClicked('fullname')\\\" placeholder=\\\"Select Full Name\\\">\\n\\t\\t\\t<div *ngIf=\\\"displaySuggestions && selectedInput == 'fullname'\\\" class=\\\"suggestions-container\\\">\\n\\t\\t\\t\\t<div *ngFor=\\\"let fullname of splittedArray.fullname\\\" class=\\\"suggestion-box\\\" (click)=\\\"selectSuggestion(fullname.value)\\\">\\n\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let element of fullname.splitted\\\"><span [ngClass]=\\\"{'bold': element.toLowerCase() == input.fullname.toLowerCase()}\\\">{{ element }}</span></ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"email-filter mr-15px mt-10px\\\">\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"w-100\\\" [(ngModel)]=\\\"input.email\\\" (ngModelChange)=\\\"generateSuggestions('email')\\\"(click)=\\\"inputClicked('email')\\\"  placeholder=\\\"Select Email\\\">\\n\\t\\t\\t<div *ngIf=\\\"displaySuggestions && selectedInput == 'email'\\\" class=\\\"suggestions-container\\\">\\n\\t\\t\\t\\t<div *ngFor=\\\"let email of splittedArray.email\\\" class=\\\"suggestion-box\\\" (click)=\\\"selectSuggestion(email.value)\\\">\\n\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let element of email.splitted\\\"><span [ngClass]=\\\"{'bold': element.toLowerCase() == input.email.toLowerCase()}\\\">{{ element }}</span></ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"mr-15px mt-10px\\\">\\n\\t\\t\\t<select [(ngModel)]=\\\"input.status\\\" (ngModelChange)=\\\"filter()\\\">\\n\\t\\t\\t\\t<option [value]=\\\"'default'\\\"> Select Status </option>\\n\\t\\t\\t\\t<option [value]=\\\"'active'\\\"> Active </option>\\n\\t\\t\\t\\t<option [value]=\\\"'inactive'\\\"> Inactive </option>\\n\\t\\t\\t\\t<option [value]=\\\"'premium'\\\"> Premium </option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\n\\t\\t<button class=\\\"search-btn mr-15px mt-10px\\\" (click)=\\\"search()\\\"> Search </button>\\n\\t\\t\\n\\t\\t<button class=\\\"reset-btn mt-10px\\\" (click)=\\\"resetFilters()\\\"> Reset Filters </button>\\n\\t</div>\\n\\n\\t\\n\\t<h2 class=\\\"mt-40px text-center\\\"> Table </h2>\\n\\t<div class=\\\"mt-10px table-container\\\">\\n\\t\\t<table>\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th> ID </th>\\n\\t\\t\\t\\t\\t<th> Full Name </th>\\n\\t\\t\\t\\t\\t<th> Email </th>\\n\\t\\t\\t\\t\\t<th> Status </th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let row of tableData; trackBy: trackByFn\\\">\\n\\t\\t\\t\\t\\t<td> {{ row.id }} </td>\\n\\t\\t\\t\\t\\t<td> {{ row.fullname }} </td>\\n\\t\\t\\t\\t\\t<td> {{ row.email }} </td>\\n\\t\\t\\t\\t\\t<td [ngClass]=\\\"{'green-letters': row.status == 'active', 'red-letters': row.status == 'inactive', 'golden-letters': row.status == 'premium'}\\\"> {{ row.status }} </td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<tr *ngIf=\\\"noData\\\" class=\\\"red-letters\\\">\\n\\t\\t\\t\\t\\t<td colspan=\\\"4\\\"> No data </td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n\\n<button *ngIf=\\\"displayScrollToTop\\\" class=\\\"scroll-top-btn\\\" (click)=\\\"scrollToTop()\\\"> ⇧ </button>\\n\"","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\ninterface Data {\n\tid: string;\n\tfullname: string;\n\temail: string;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\tsub: Subscription;\t\t\t\t\t\t\t\t\t\t//variable for managing subscription\n\t\n\tinput = {\t\t\t\t\t\t\t\t\t\t\t//form data\n\t\tfullname: null,\n\t\temail: null,\n\t\tstatus: 'default'\n\t};\n\tselectedInput: string;\t\t\t\t\t\t\t\t\t\t//input field which user typed last time\n\tvalidFilters = {\t\t\t\t\t\t\t\t\t\t//if filter input match with server data\n\t\tfullname: false,\n\t\temail: false\n\t};\n\t\n\tsplittedArray = {                                                                              //server records that contain input and splitted by input\n                fullname: [],\n                email: []\n\t};\n\tdisplaySuggestions: boolean;\n\t\n\tsavedData: Array<Data>;\t\t\t\t\t\t\t\t\t\t//contains all the data server has returned\n\ttableData: Array<Data>;\t\t\t\t\t\t\t\t\t\t//displayed data in table\n\tnoData: boolean;\t\t\t\t\t\t\t\t\t\t//true if empty table\n\t\n\tdisplayScrollToTop: boolean;\t\t\t\t\t\t\t\t\t//if true, scroll to top button is displayed\n\t\n\tconstructor(private http: HttpClient) {}\n\t\n  \t@HostListener('document:click') onClickAnywhere() {\t\t\t\t\t\t//when user clicks\n\t  \tthis.displaySuggestions = false;\t\t\t\t\t\t\t//hide suggestions\n\t}\n\t\n\t@HostListener('window:scroll', ['$event']) onScroll(event:Event) {\t\t\t\t//when user scrolls\n\t\tif (document.documentElement.scrollTop >= 200) {\t\t\t\t\t//if he has scrolled down 200 pixels or more\n\t\t\tthis.displayScrollToTop = true;\t\t\t\t\t\t\t//display scroll to top button\n\t\t}\n\t\telse {\n\t\t\tthis.displayScrollToTop = false;\t\t\t\t\t\t//hide scroll to top button\n\t\t}\n\t}\n\t\n\tngOnInit() {\n\t\tthis.displaySuggestions = false;\t\t\t\t\t\t\t//initialize variables\n\t\tthis.selectedInput = null;\n\t\t\n\t\tthis.getData();\t\t\t\t\t\t\t\t\t\t//call function getData\n\t}\n\t\n\tgetData() {\n\t\tconst url: string = 'assets/data.json';\t\t\t\t\t\t\t//this is the url from where site gets data\n\t\t\n\t\tthis.sub = this.http.get<Data[]>(url).subscribe(data => {\t\t\t\t//subscribe to server's response\t\t\n\t\t\tthis.savedData = data;\t\t\t\t\t\t\t\t//assign server's response to a variable\n\t\t\tthis.tableData = this.savedData;\t\t\t\t\t\t//display server's response\n\t\t\tthis.noData = (this.tableData.length > 0) ? false : true;\t\t\t//update variable if server returned nothing or not\n\t\t}, error => {\t\t\t\t\t\t\t\t\t\t//in case of error\n\t\t\tthis.connectionErrorHandler();\t\t\t\t\t\t\t//call function connectionErrorHandler\n\t\t});\n\t}\n\t\n\tgenerateSuggestions(inputName: string) {\n                let tempArray, regex, existsInSuggestions;\n                this.splittedArray[inputName] = [];                                                     //initialize variables\n                this.displaySuggestions = false;\n                this.validFilters[this.selectedInput] = false;\n\t\t\n                if (!this.input[this.selectedInput]) {                                                  //if input is empty\n                        this.filter();                                                                  //call function filter\n                        return;                                                                         //stop function's execution\n                }\n                else if (this.input[this.selectedInput].length < 3) {                                   //if input's length is less than 3 characters\n                        return;                                                                         //stop function's execution\n                }\n\t\t\n                existsInSuggestions = false;\n                for (let row of this.savedData) {\n                        if (this.selectedInput == 'fullname') {                                         //for non unique properties\n                                for (let element of this.splittedArray[inputName]) {\n                                        if (element.value == row[this.selectedInput]) {                 //check if there is a duplicate\n                                                existsInSuggestions = true;\n                                        }\n                                }\n                        }\n\t\t\t\n                        if (existsInSuggestions == false) {                                             //if there is no duplicate\n                                regex = new RegExp('(' + this.input[this.selectedInput] + ')', 'i');\n                                                                                                        //this regular expression will search given server record for input\n                                tempArray = row[this.selectedInput].split(regex);                       //split string by regular expression and store the result into array\n\t\t\t  \t\n                                if (tempArray.length > 1) {                                             //if input exists in server record\n                                        if (tempArray[0] == '' && tempArray[2] == '') {\n                                                this.splittedArray[inputName] = [{ value: row[this.selectedInput], splitted: [row[this.selectedInput]] }];\n                                                this.validFilters[inputName] = true;\n                                        }\n                                        else {\n                                                this.splittedArray[inputName].push({ value: row[this.selectedInput], splitted: tempArray });\n                                                                                                        //push value and splitted array into array\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n                if (this.splittedArray[inputName].length > 0) {                                         //if there is at least one match\n                        this.displaySuggestions = true;                                                 //display suggestions\n                }\n\t}\n\t\n\tselectSuggestion(value: string) {\n                this.input[this.selectedInput] = value;                                                 //set input to selected suggestion\n                this.validFilters[this.selectedInput] = true;                                           //filter is valid\n\t\t\n                this.filter();                                                                          //call function filter\n\t}\n\t\n\tsearch() {\n                if (this.input.fullname) {\t\t\t\t\t\t\t\t//if fullname input is not empty\n                        this.validFilters.fullname = true;\t\t\t\t\t\t//fullname filter is valid\n                }\n                if (this.input.email) {\t\t\t\t\t\t\t\t\t//if email input is not empty\n                        this.validFilters.email = true;                                                 //email filter is valid\n                }\n\t\t\n                this.filter();                                                                          //call function filter\n\t}\n\t\n\tinputClicked(inputName: string) {\n                this.selectedInput = inputName;\n                if (!(!this.input[this.selectedInput] || this.input[this.selectedInput].length < 3)) {\n                                                                                                        //if input's length is more than 2 characters\n                        setTimeout(() => {                                                              //this delay is necessary because this code must be executed after onClickAnywhere function\n                                this.displaySuggestions = true;\t\t\t\t\t\t//show suggestions\n                        }, 10);\n                }\n        }\n\t\n\tfilter() {\n\t\tlet tempData: Array<Data> = this.savedData;\t\t\t\t\t\t//set server data to a variable\n\t\t\n\t\tif (this.validFilters.fullname == true) {\t\t\t\t\t\t//if fullname filter is valid\n\t\t\ttempData = this.matchData(tempData, 'fullname');\t\t\t\t//call function matchData that filters data by fullname\n\t\t}\n\t\t\n\t\tif (this.validFilters.email == true) {\t\t\t\t\t\t\t//if email filter is valid\n\t\t\ttempData = this.matchData(tempData, 'email');\t\t\t\t\t//call function matchData that filters data by email\n\t\t}\n\t\t\n\t\tif (this.input.status != 'default') {\t\t\t\t\t\t\t//if status is not set to default value\n\t\t\ttempData = this.matchData(tempData, 'status');\t\t\t\t\t//call function matchData that filters data by status\n\t\t}\n\t\t\n\t\tthis.tableData = tempData;\t\t\t\t\t\t\t\t//display data after filters are applied\n\t\tthis.noData = (this.tableData.length > 0) ? false : true;\t\t\t\t//update variable if there are data in table or not\n\t}\n\t\n\tresetFilters() {\t\t\t\t\t\t\t\t\t\t//reset variables to default values\n\t\tthis.input = {\n\t\t\tfullname: null,\n\t\t\temail: null,\n\t\t\tstatus: 'default'\n\t\t};\n\t\tthis.validFilters = {\n\t\t\tfullname: false,\n\t\t\temail: false\n\t\t};\n\t\tthis.displaySuggestions = false;\n\t\tthis.tableData = this.savedData;\n\t\tthis.noData = (this.tableData.length > 0) ? false : true;\n\t}\n\t\n\tscrollToTop() {\n\t\tdocument.body.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\n\t}\n\t\n\ttrackByFn(index, row: Data) {\t\t\t\t\t\t\t\t\t//improves performance when table is updated\n\t\treturn row.id;\n\t}\n\t\n\tmatchData(data: Array<Data>, property: string): Array<Data> {\n\t\tlet matchedRows: Array<Data> = [];\n\t\t\n\t\tfor (let row of data) {\n\t\t\tif (row[property] == this.input[property]) {\t\t\t\t\t//if input and server record are matched\n\t\t\t\tmatchedRows.push(row);\t\t\t\t\t\t\t//push server record into array\n\t\t\t\tif (property == 'email') {\t\t\t\t\t\t//if property is unique\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t//stop loop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn matchedRows;\t\t\t\t\t\t\t\t\t//return matched server records\n\t}\n\t\n\tconnectionErrorHandler() {\n\t\tthis.savedData = [];\t\t\t\t\t\t\t\t\t//no server data\n\t\tthis.tableData = [];\n\t\tthis.noData = true;\n\t}\n\t\n\tngOnDestroy() {\n\t\tthis.sub.unsubscribe();\t\t\t\t\t\t\t\t\t//end subscription\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tHttpClientModule\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}